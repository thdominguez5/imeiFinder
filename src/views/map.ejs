
<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
  <a class="navbar-brand" href="/">Imei and act Finder</a>
</nav>

<style>
  #chartdiv {
    width: 100%;
    height: 500px;
  }
  
</style>
<link rel="stylesheet" href="https://bootswatch.com/4/lux/bootstrap.min.css">

<script src="https://cdn.amcharts.com/lib/4/core.js"></script>
<script src="https://cdn.amcharts.com/lib/4/maps.js"></script>
<script src="https://cdn.amcharts.com/lib/4/themes/animated.js"></script>

<!-- Chart code -->
<script>
  

am4core.ready(function() {

// Themes begin
am4core.useTheme(am4themes_animated);
// Themes end

// Create map instance
var chart = am4core.create("chartdiv", am4maps.MapChart);

// Set map definition
chart.geodataSource.url = "https://www.amcharts.com/lib/4/geodata/json/worldLow.json";

let stringQuery = [];

'<% var x = data.length %>'
'<% let arrayQuery = [];%>'
'<% for (var i =0; i <= x -1;  i++ ) { %>'
'<% let dato = Object.values(data[i])%>'
'<% arrayQuery.push(dato); %>'
'<% } %>'
stringQuery = '<%= arrayQuery%>'

let arrayQuery = stringQuery.split(",");




let arr = [];
for (var i = 0; i < arrayQuery.length -1; i+=4){
let ar = [arrayQuery[i],arrayQuery[i+1],arrayQuery[i+2],arrayQuery[i+3]];
arr.push(ar);
}



function MakeCaps(){
    chart.geodataSource.events.on("parseended", function(event) {
      
      //fetchear los datos en un array
      
       
      let conditionGSM = [];
      let companysGSM = [];

      let conditionUMTS = [];
      let companysUMTS = [];


      let conditionLTE = [];
      let companysLTE = [];
      

      let data = [];

      for(var i = 0; i <= event.target.data.features.length -1; i++ ) {
        mydatafetch(i);
        pushing(i);
      }
      

      function mydatafetch(x) {
        let companyGSM = [];
        let companyUMTS = [];
        let companyLTE = [];
        for (var i = 0; i <= arr.length -1; i++){
          if(arr[i][1] === event.target.data.features[x].properties.name){


            if(arr[i][2] === "GSM"){
              if (!(conditionGSM.includes(arr[i][1]))){
                conditionGSM.push(event.target.data.features[x].id);
              }
              if (!(companyGSM.includes(arr[i][0]))){
                companyGSM.push(arr[i][0]);
              }
            }


            if(arr[i][2] === "UMTS"){
              if (!(conditionUMTS.includes(arr[i][1]))){
                conditionUMTS.push(event.target.data.features[x].id);
              }
              if (!(companyUMTS.includes(arr[i][0]))){
                companyUMTS.push(arr[i][0]);
              }
            }
            
            
            if(arr[i][2] === "LTE-TDD"){
              if (!(conditionLTE.includes(arr[i][1]))){
                conditionLTE.push(event.target.data.features[x].id);
              }
              if (!(companyLTE.includes(arr[i][0]))){
                companyLTE.push(arr[i][0]);
              }
            }

            if(arr[i][2] === "LTE-FDD"){
              if (!(conditionLTE.includes(arr[i][1]))){
                conditionLTE.push(event.target.data.features[x].id);
              }
              if (!(companyLTE.includes(arr[i][0]))){
                companyLTE.push(arr[i][0]);
              }
            }
            
            

          }
        }
        companysGSM.push({id:event.target.data.features[x].id, companys: companyGSM});
        companysUMTS.push({id:event.target.data.features[x].id, companys: companyUMTS});
        companysLTE.push({id:event.target.data.features[x].id, companys: companyLTE});
      }
      


      function pushing (x) {
        

        let companysOfGsm = "";
          for (var i = 0; i <= companysGSM.length -1; i++ ){
            if (companysGSM[i].id === event.target.data.features[x].id) {
              companysOfGsm = companysGSM[i].companys.toString();
            }
          }

        let companysOfUMTS = "";
        for (var i = 0; i <= companysUMTS.length -1; i++ ){
          if (companysUMTS[i].id === event.target.data.features[x].id) {
            companysOfUMTS = companysUMTS[i].companys.toString();
          }
        }

        let companysOfLTE = "";
        for (var i = 0; i <= companysLTE.length -1; i++ ){
          if (companysLTE[i].id === event.target.data.features[x].id) {
            companysOfLTE = companysLTE[i].companys.toString();
          }
        }


        if (conditionGSM.includes(event.target.data.features[x].id) && conditionUMTS.includes(event.target.data.features[x].id) && conditionLTE.includes(event.target.data.features[x].id)){
          
          data.push({
            id: event.target.data.features[x].id,
            GSM: "GSM",
            CGSM: companysOfGsm,
            UMTS: "UMTS",
            CUMTS: companysOfUMTS,
            LTE: "LTE",
            CLTE:companysOfLTE,
            "fill": am4core.color("#E14904")
          })
        }

        else if (conditionGSM.includes(event.target.data.features[x].id) && conditionUMTS.includes(event.target.data.features[x].id)){
          
          data.push({
            id: event.target.data.features[x].id,
            GSM: "GSM",
            CGSM: companysOfGsm,
            UMTS: "UMTS",
            CUMTS: companysOfUMTS,
            "fill": am4core.color("#DFD27C")
          })
        }
        
        else if (conditionGSM.includes(event.target.data.features[x].id) && conditionLTE.includes(event.target.data.features[x].id)){
          
          data.push({
            id: event.target.data.features[x].id,
            GSM: "GSM",
            CGSM: companysOfGsm,
            LTE: "LTE",
            CLTE:companysOfLTE,
            "fill": am4core.color("#C82FC0")
          })
        }

        else if (conditionUMTS.includes(event.target.data.features[x].id) && conditionLTE.includes(event.target.data.features[x].id)){

          data.push({
            id: event.target.data.features[x].id,
            UMTS: "UMTS",
            CUMTS: companysOfUMTS,
            LTE: "LTE",
            CLTE:companysOfLTE,
            "fill": am4core.color("#F5A858")
          })
        }
        // else if (conditionUMTS.includes(event.target.data.features[x].id)){
            
        //     data.push({
        //       id: event.target.data.features[x].id,
        //       UMTS: "UMTS",
        //       CUMTS: companysOfUMTS,
        //       "fill": am4core.color("#EB6BAE")
        //     })
        //   }
        //   else if (conditionGSM.includes(event.target.data.features[x].id)){

        //     data.push({
        //       id: event.target.data.features[x].id,
        //       GSM: "GSM",
        //       CGSM: companysOfGSM,
        //       "fill": am4core.color("#BFBFF6")
        //     })
        //   }
        //   else if (conditionLTE.includes(event.target.data.features[x].id)){

        //     data.push({
        //       id: event.target.data.features[x].id,
        //       LTE: "LTE",
        //       CLTE: companysOfLTE,
        //       "fill": am4core.color("#FFE501")
        //     })
        //   }
        
      }

      worldSeries.data = data;
      
    })  
  }
  



// Set projection
chart.projection = new am4maps.projections.Mercator();

// Add zoom control
chart.zoomControl = new am4maps.ZoomControl();

// Set initial zoom
chart.homeZoomLevel = 1;
// Series for World map
MakeCaps();


var worldSeries = chart.series.push(new am4maps.MapPolygonSeries());




  
worldSeries.exclude = ["AQ"];
worldSeries.useGeodata = true;

var polygonTemplate = worldSeries.mapPolygons.template;
polygonTemplate.propertyFields.fill = "fill";
polygonTemplate.tooltipText = "{name}:\n {GSM}:\n {CGSM}\n {UMTS}:\n {CUMTS}\n {LTE}\n {CLTE}\n";
polygonTemplate.fill = am4core.color("#A7A7A7");


  
polygonTemplate.events.on("hit", function(ev) {
ev.target.series.chart.zoomToMapObject(ev.target);
//worldSeries.getPolygonById("RU").hide();

var back = chart.createChild(am4core.ZoomOutButton);
back.align = "right";
back.events.on("hit", function(ev) {
chart.goHome();
back.hide();
});
});
            /* Add legend */
            var legend = new am4maps.Legend();
            legend.parent = chart.chartContainer;
            legend.background.fill = am4core.color("#000");
            legend.background.fillOpacity = 0.05;
            legend.width = 130;
            legend.align = "left";
            legend.padding(10, 15, 10, 15);
            legend.data = [{
              "name": "2g/3g/4g",
              "fill":"#E14904"
            }, {
              "name": "2g/4g",
              "fill": "#C82FC0"
            }, {
              "name": "2g/3g",
              "fill": "#DFD27C"
            }, {
              "name": "3g/4g",
              "fill": "#F5A858"
            }, {
              "name": "2g",
              "fill": "#BFBFF6"
            }, {
              "name": "3g",
              "fill": "#EB6BAE"
            }, {
              "name": "4g",
              "fill": "#FFE501"
            }];
            legend.itemContainers.template.clickable = false;
            legend.itemContainers.template.focusable = false;

            var legendTitle = legend.createChild(am4core.Label);
            legendTitle.text = "Member since:";




// Hover state
var hs = polygonTemplate.states.create("hover");
hs.properties.fill = am4core.color("#3D9E60");



}); // end am4core.ready()
</script>
            
            <!-- HTML -->
            
            <div id="chartdiv"></div>
            <div class="col-2">
                
                    <div class="card-body">
                        <form action="/back" method="post">
                            <button type="submit" class="btn btn-primary">Go back</button>
                            </form>
                        </div>
                    
                </div>
          </div>

          <table class="table table-bordered table-hover">
            <thead>
              <tr>
                <td>Country</td>
                <td>Company</td>
                <td>Act</td>
                
              </tr>
            </thead>
            <tbody>
              <% if (data) { %>
                <% for(var i = 0; i < data.length; i++) { %>
                  <tr>
                    
                    <td><%= data[i].Country %></td>
                    <td><%= data[i].Network %></td>
                    <td><%= data[i].A %></td>

                  </tr>
                <% } %>
              <% } %>
            </tbody>
            
            
          </table>